buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            url 'http://repo.jenkins-ci.org/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:0.9.9'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
        classpath 'net.researchgate:gradle-release:2.6.0'
		classpath 'com.gradle:build-scan-plugin:1.16'
    }
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'net.researchgate.release'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
apply plugin: 'com.gradle.build-scan'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    addAll(buildscript.repositories)
}

release {
    buildTasks = ['publishPlugins']
}

defaultTasks 'dailyBuild'

task dailyBuild(type: GradleBuild) {
    tasks = ['jar', 'test', 'jacocoTestReport', 'sonarqube']
}

task travisBuild(type: GradleBuild) {
    tasks = ['jar', 'test', 'jacocoTestReport']
}

sourceSets {

}

dependencies {
    compile gradleApi()
	compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'xmlunit:xmlunit:1.3'
    compile 'org.jenkins-ci:version-number:1.4'

    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
        exclude(module: 'groovy')
    }

    compile('org.jenkins-ci.plugins:job-dsl-core:1.66') {
        exclude(module: 'groovy-all')
    }

    compile 'com.google.guava:guava:19.0'

    testCompile('com.netflix.nebula:nebula-test:3.1.0') {
        exclude(module: 'groovy-all')
    }

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude(module: 'groovy-all')
    }
}

if (! project.hasProperty('jenkinsPort')) {
    ext.jenkinsPort = 9999
}

// I use sonarcloud only for local build.
// For travis build please refer coveralls.io
sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.organization", "crc83-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "${github_sonar_token}"
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'     
    termsOfServiceAgree = 'yes'                                   

    publishAlways()                                               
}


pluginBundle {
    website = 'https://github.com/crc83/gradle-jenkins-plugin'
    vcsUrl = 'https://github.com/crc83/gradle-jenkins-plugin'
    description = 'A Gradle plugin for programmatically managing Jenkins instances.'
    tags = ['jenkins', 'gradle']

    plugins {
        jenkins {
            id = 'com.sbelei.jenkins'
            displayName = 'Gradle Jenkins plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }
}

test {
    ignoreFailures = true
}